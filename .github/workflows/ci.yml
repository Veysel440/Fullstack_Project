name: ci
on:
  push: { branches: [ main ] }
  pull_request: {}

jobs:
  go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go-api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - uses: actions/setup-node@v4
        with: { go-version: '1.23', node-version: '20', cache: true }
      - run: go mod tidy
      - run: go vet ./...
      - run: go test ./... -race -coverprofile=coverage.out
      - run: go build ./cmd/api ./cmd/auditor ./cmd/auditor-retry
      - run: npm i -g swagger-cli
      - run: swagger-cli validate internal/http/openapi.yaml

  e2e:
    runs-on: ubuntu-latest
    needs: go
    steps:
      - uses: actions/checkout@v4

      - name: Compose up
        working-directory: infra
        run: |
          export GOAPI_PATH=$GITHUB_WORKSPACE/go-api
          export WEBAPP_PATH=$GITHUB_WORKSPACE/webapp
          docker compose -f docker-compose.yml up -d --build postgres redis kafka api web
          # wait
          for i in {1..60}; do
            curl -fsS http://localhost:8080/health && break || sleep 2
          done
          for i in {1..60}; do
            curl -fsS http://localhost:3001 || true
            curl -fsS http://localhost:3001 >/dev/null && break || sleep 2
          done

      - uses: actions/setup-node@v4
        with: { node-version: '20' }

      - name: Install Playwright
        working-directory: webapp
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run e2e
        working-directory: webapp
        env:
          BASE_URL: http://localhost:3001
        run: npx playwright test --reporter=line

      - name: Logs on failure
        if: failure()
        run: docker compose -f infra/docker-compose.yml logs --no-color api web


  docker:
    runs-on: ubuntu-latest
    needs: go
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: ./go-api
          file: ./go-api/Dockerfile
          push: false
          tags: local/fullstack-pg-api:ci

  trivy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: local/fullstack-pg-api:ci
          format: table
          exit-code: 0
          vuln-type: 'os,library'
          ignore-unfixed: true